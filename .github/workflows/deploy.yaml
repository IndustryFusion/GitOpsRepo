name: Deploy

on:
  workflow_dispatch:
    inputs:
      APPS:
        description: 'Comma-separated list of apps to deploy/upgrade, leave empty to deploy everything'
        required: false
        default: ''
        type: string
      NAMESPACE:
        description: 'Namespace to deploy'
        required: false
        default: 'iff50'
        type: string
      DOCKER_REGISTRY:
        description: 'Name of the docker registry'
        required: false
        default: ibn40
        type: string
      DOCKER_TAG:
        description: 'Docker tag to use in the deployment'
        required: false
        default: 'latest'
        type: string
      PULL_SECRET_CREDENTIALS:
        description: 'Name of the secret in cluster that contains docker registry credentials'
        required: false
        default: 'regcred'
        type: string
  workflow_call:
    inputs:
      APPS:
        description: 'Comma-separated list of apps to deploy/upgrade, leave empty to deploy everything'
        required: false
        default: ''
        type: string
      NAMESPACE:
        description: 'Namespace to deploy'
        required: false
        default: 'iff50'
        type: string
      DOCKER_REGISTRY: 
        description: 'Name of the docker registry'
        required: false
        default: ibn40
        type: string
      DOCKER_TAG:
        description: 'Docker tag to use in the deployment'
        required: false
        default: 'latest'
        type: string
      PULL_SECRET_CREDENTIALS:
        description: 'Name of the secret in cluster that contains docker registry credentials'
        required: false
        default: 'regcred'
        type: string

jobs:
  clone-repo:
    runs-on: private
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          path: GitOpsRepo
  deploy-action:
    needs: clone-repo
    runs-on: private
    container:
      image: ibn40/deployer:latest
      options: --root
      volumes:
        - ${{ github.workspace }}/GitOpsRepo:/home/deployer/GitOpsRepo
    steps:
      - name: Deploy
        run: |
          export NAMESPACE="${{ github.event.inputs.NAMESPACE }}"
          cd /home/deployer/GitOpsRepo/helm
          bash install_operators.sh
          LABEL_ARG=""
          if [[ ! -z "${{ github.events.inputs.APPS }}"]]
          then
            LABEL_ARG="-l 'app in (${{ github.events.inputs.APPS }})'"
          fi
          helmfile -e production ${LABEL_ARG} \
            --set mainRepo=${{ github.event.inputs.DOCKER_REGISTRY }} \
            --set mainVersion=${{ github.event.inputs.DOCKER_TAG }} \
            --set namespace=$${{ github.event.inputs.NAMESPACE }} \
            --set pullSecretCredentials=$${{ github.event.inputs.PULL_SECRET_CREDENTIALS }}