apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: xana-ai-app
  name: xana-ai-app
  namespace: {{ .Values.xana_ai.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xana-ai-app  
  template:
    metadata:
      labels:
        app: xana-ai-app
    spec:
      containers:
      - name: xana-ai
        image: {{ .Values.mainRepo }}/xana-ai-frontend:{{ .Values.mainVersion }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.xana_ai.frontendPort }}
      - name: xana-ai-backend
        image: {{ .Values.mainRepo }}/xana-ai-backend:{{ .Values.mainVersion }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.xana_ai.backendPort }}
        env:
        - name: OLLAMA_BASE_URL
          value: http://localhost:11434
        - name: LLM_API_KEY
          value: ollama
        - name: LLM_MODEL
          value: "meta-llama/Llama-3.3-70B-Instruct"
        - name: LLM_PROVIDER
          value: ionos
        - name: LLM_ENDPOINT
          value: http://localhost:11434
        - name: OLLAMA_CHAT_TIMEOUT
          value: "120000"
        - name: EMBEDDING_PROVIDER
          value: ionos
        - name: EMBEDDING_ENDPOINT
          value: https://openai.inference.de-txl.ionos.com
        - name: EMBEDDING_MODEL
          value: "BAAI/bge-m3"
        - name: EMBEDDING_DIMENSIONS
          value: "1024"
        - name: HUGGINGFACE_TOKENIZER
          value: "TOKENIZER_TO_YOUR_EMBEDDING_MODEL"
        - name: RAG_EMBED_DIM
          value: "1024"
        - name: VECTOR_PROVIDER
          value: milvus
        - name: MILVUS_PROVIDER
          value: remote
        - name: PGVECTOR_CONNECTION_URL
          value: "postgresql://postgres:postgres@localhost:5432/vectordb"
        - name: PGVECTOR_HOST
          value: localhost
        - name: PGVECTOR_PORT
          value: "5432"
        - name: PGVECTOR_USER
          value: postgres
        - name: PGVECTOR_PASSWORD
          value: postgres
        - name: PGVECTOR_DB
          value: vectordb
        - name: PGVECTOR_SSL
          value: "false"
        - name: RAG_EMBED_DIM
          value: "1024"
        - name: RAG_EMBED_METRIC
          value: COSINE
        - name: MONGODB_URI
          value: {{ .Values.xana_ai.mongodbUri }}
        - name: MONGODB_DB
          value: admin
        - name: MONGO_COL
          value: vector_store_mappings
        - name: CORS_ORIGIN
          value: "https://dev-xana.industryfusion-x.org"
        - name: MILVUS_API_URL
          value: "http://195.20.227.160:19530"
        - name: PGHOST
          value: "85.215.179.232"
        - name: PGPORT
          value: "5432"
        - name: PGPASSWORD
          value: "Y0LlLjkrztWxlhL8YRsmEF6f7miwJ2xR"
        - name: PGSSL
          value: "true"
        - name: COMPLETIONS_API_URL
          value: "https://openai.inference.de-txl.ionos.com"
        - name: COMPLETIONS_API_KEY
          value: {{ .Values.xana_ai.completionsApiKey }}
        - name: RAG_COLLECTION_NAME
          value: custom_setup_7
        - name: MILVUS_COLLECTION_NAME
          value: custom_setup_7
        - name: RAG_INGEST_DIR
          value: ./src/data/jsonld
        - name: RAG_INGEST_INTERVAL_MS
          value: "600"
        - name: REGISTRY_URL
          value: "https://dev-registry.ifric.org"
        - name: SECRET_KEY
          value: {{ .Values.xana_ai.secretKey }}
        - name: MASK_SECRET
          value: {{ .Values.xana_ai.maskSecret }}
        - name: ALERTA_API_KEY
          value: dJRkUos9JIPAqiw4U5Hly7AxVINARBPw
        - name: ALERTA_API_URL
          value: https://dev.industry-fusion.com/alerta/api/alerts
        # volumeMounts:
        # - name: nginx-config
        #   mountPath: /etc/nginx/conf.d/default.conf
        #   subPath: default.conf
      imagePullSecrets:
      - name: {{ .Values.pullSecretCredentials }}
      # volumes:
      # - name: nginx-config
      #   configMap:
      #     name: if50-nginx-config
      #     items:
      #     - key: config
      #       path: default.conf

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: xana-ai-ingress-backend
  namespace: {{ .Values.xana_ai.Namespace }}
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - dev-xana-backend.industryfusion-x.org
      secretName: dev-cert-tls-xana-backend
  rules:
    - host: dev-xana-backend.industryfusion-x.org
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: xana-ai-service
                port:
                  number: 4050
