---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: fleet50-application-service
  name: fleet50-application-service
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - port: {{ .Values.fleet50.backendPort }}
    targetPort: {{ .Values.fleet50.backendPort }}
    name: fleet50-backend
    protocol: TCP
  - port: {{ .Values.fleet50.frontendPort }}
    targetPort: {{ .Values.fleet50.frontendPort }}
    name: fleet50-frontend
    protocol: TCP
  type: LoadBalancer
  selector:
    app: fleet50-application-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fleet50-application-service
  name: fleet50-application-service
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fleet50-application-service
  template:
    metadata:
      labels:
        app: fleet50-application-service
    spec:
      containers:
      - name: fleet50-backend
        image: {{ .Values.mainRepo }}/fleet50-backend:{{ .Values.mainVersion}}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.fleet50.backendPort }}
        envFrom:
          - secretRef:
              name: vault-secrets
      - name: fleet50-frontend
        image: {{ .Values.mainRepo }}/fleet50-frontend:{{ .Values.mainVersion}}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.fleet50.frontendPort }}
        # volumeMounts:
        # - name: nginx-config
        #   mountPath: /etc/nginx/conf.d/default.conf
        #   subPath: default.conf
      imagePullSecrets:
      - name: {{ .Values.pullSecretCredentials }}
      # volumes:
      # - name: nginx-config
      #   configMap:
      #     name: if50-nginx
      #     items:
      #     - key: config
      #       path: default.conf
