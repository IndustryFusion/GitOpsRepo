---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: fleet-manager-service
  name: fleet-manager-service
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - port: {{ .Values.fleetmanager.backendPort }}
    targetPort: {{ .Values.fleetmanager.backendPort }}
    name: backend
    protocol: TCP
  - port: 80
    targetPort: {{ .Values.fleetmanager.frontendPort }}
    name: frontend
    protocol: TCP
  selector:
    app: fleet-manager-service
---
{{- $mongodbsecret := (lookup "v1" "Secret" .Release.Namespace "mongodb-fleet-manager-connection") -}}
{{- $fleetmanagersecret := (lookup "v1" "Secret" .Release.Namespace "fleet-manager-user") -}}
{{- $alertasecret :=  (lookup "v1" "Secret" .Release.Namespace "alerta") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fleet-manager-service
  name: fleet-manager-service
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fleet-manager-service
  template:
    metadata:
      labels:
        app: fleet-manager-service
    spec:
      containers:
      - name: backend
        image: {{ .Values.mainRepo }}/fleet-manager-backend:{{ .Values.mainVersion}}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.fleetmanager.backendPort }}
        env:
        - name: NODE_ENV
          value: local
        - name: S3_URL
          value: {{ .Values.s3.url }}
        - name: S3_ACCESS_KEY
          value: {{ .Values.s3.accessKey }}
        - name: S3_SECRET_KEY
          value: {{ .Values.s3.secretKey }}
        - name: S3_BUCKET
          value: {{ .Values.s3.fleetmanagerBucket }}
        - name: PDT_USERNAME
          value: factory_admin
        - name: PDT_PASSWORD
          value: "@zN8k51@ORJg"
        - name: ICS_SERVICE_URL
          value: https://development.industry-fusion.com/ics
        - name: ICS_SERVICE_TOKEN
          value: aWNzZGItdXNlcjpnbGtxTklsRDlXb0hYT05Xa1IzS1JGZXBpQ1VVNEFuUg==
        {{- if $mongodbsecret }}
        - name: MONGO_URL
          value: {{ index $mongodbsecret "data" "connectionString.standard" | toString | b64dec }}
        {{- end }}
        {{- if $alertasecret }}
        - name: ALERTA_SERVICE_URL
          value: {{ $alertasecret.data.url | toString | b64dec }}
        - name: ALERTA_SERVICE_TOKEN
          value: {{ $alertasecret.data.accesskey | toString | b64dec }}
        {{- else }}
        - name: ALERTA_SERVICE_URL
          value: {{ .Values.alerta.url | toString }}
        - name: ALERTA_SERVICE_TOKEN
          value: {{ .Values.alerta.accesskey | toString }}
        {{- end }}
        {{- if $fleetmanagersecret }}
        - name: HTTP_BASIC_USER
          value: {{ $fleetmanagersecret.data.username | toString | b64dec }}
        - name: HTTP_BASIC_PASS
          value: {{ $fleetmanagersecret.data.password | toString | b64dec }}
        {{- else }}
        - name: HTTP_BASIC_USER
          value: {{ .Values.fleetmanager.username | toString }}
        - name: HTTP_BASIC_PASS
          value: {{ .Values.fleetmanager.password | toString }}
        {{- end }}
        - name: PORT
          value: "{{ .Values.fleetmanager.backendPort | toString }}"
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
      - name: frontend
        image: {{ .Values.mainRepo }}/fleet-manager-frontend:{{ .Values.mainVersion}}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.fleetmanager.frontendPort }}
        env:
        - name: URL
          value: backend
        {{- if $fleetmanagersecret }}
        - name: HTTP_BASIC_USER
          value: {{ $fleetmanagersecret.data.username | toString | b64dec }}
        - name: HTTP_BASIC_PASSWORD
          value: {{ $fleetmanagersecret.data.password | toString | b64dec }}
        {{- else }}
        - name: HTTP_BASIC_USER
          value: {{ .Values.fleetmanager.username | toString }}
        - name: HTTP_BASIC_PASSWORD
          value: {{ .Values.fleetmanager.password | toString }}
        {{- end }}
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        - name: nginx-htpasswd 
          mountPath: /etc/nginx/.htpasswd
          subPath: .htpasswd
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
      imagePullSecrets:
      - name: {{ .Values.pullSecretCredentials }}
      volumes:
      - name: nginx-config
        configMap:
          name: fleet-manager-nginx
          items:
          - key: config
            path: default.conf
      - name: nginx-htpasswd
        secret:
          secretName: fleet-manager-htpasswd
          items:
          - key: auth
            path: .htpasswd