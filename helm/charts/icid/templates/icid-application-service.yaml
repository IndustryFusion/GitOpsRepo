---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: icid-application-service
  name: icid-application-service
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - port: {{ .Values.icid.backendPort }}
    targetPort: {{ .Values.icid.backendPort }}
    name: icid-backend
    protocol: TCP
  type: LoadBalancer
  selector:
    app: icid-application-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: icid-application-service
  name: icid-application-service
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: icid-application-service
  template:
    metadata:
      labels:
        app: icid-application-service
    spec:
      containers:
      - name: icid-backend
        image: {{ .Values.mainRepo }}/icid-backend:{{ .Values.mainVersion}}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.icid.backendPort }}
        env:
        - name: MONGO_URL
          value: {{ .Values.icid.mongoUrl }}
        - name: IFRIC_NAMESPACE
          value: {{ .Values.icid.namespace }}
        - name: CORS_ORIGIN
          value: {{ .Values.icid.corsOrigin }}
        - name: FLEET_MANAGER_BACKEND_URL
          value: {{ .Values.icid.fleetBackendUrl }}
        - name: IFRIC_PLATFORM_BACKEND_URL
          value: {{ .Values.icid.platformBackendUrl }}
        - name: IFRIC_REGISTRY_BACKEND_URL
          value: {{ .Values.icid.registryUrl }}
        - name: IFX_PLATFORM_BACKEND_URL
          value: {{ .Values.icid.ifxPlatformBackendUrl }}
        - name: KEY_PATH
          value: /etc/ssl/certs/root-ca-key.pem
        - name: CERTIFICATE_PATH
          value: /etc/ssl/certs/root-ca-cert.pem
        - name: BINDING_DEFAULT_CODE
          value: IFX-CON-BND
        - name: CONTRACT_DEFAULT_CODE
          value: IFX-CON-DEF
        volumeMounts:
        - name: icid-cert-volume
          mountPath: /etc/ssl/certs
          readOnly: true
      volumes:
      - name: icid-cert-volume
        configMap:
          name: icid-cert-config
          items:
          - key: root-ca-key.pem
            path: root-ca-key.pem
          - key: root-ca-cert.pem
            path: root-ca-cert.pem
      imagePullSecrets:
      - name: {{ .Values.pullSecretCredentials }}
