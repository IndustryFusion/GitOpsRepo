{{- if .Values.opcua.configuration.enabled }}
apiVersion: {{ printf "%s/%s" .Values.crds.group .Values.crds.version }}
kind: Configuration
metadata:
  name: {{ .Values.opcua.configuration.name }}
spec:
  discoveryHandler:
    name: opcua
    discoveryDetails: |+
      opcuaDiscoveryMethod: 
        standard:
          discoveryUrls: 
          {{- toYaml .Values.opcua.configuration.discoveryDetails.discoveryUrls | nindent 10 }}
      applicationNames:
        action: {{ .Values.opcua.configuration.discoveryDetails.applicationNames.action }}
        {{- if .Values.opcua.configuration.discoveryDetails.applicationNames.items}}
        items:
        {{- toYaml .Values.opcua.configuration.discoveryDetails.applicationNames.items | nindent 8 }}
        {{- else }}
        items: []
        {{- end }}

  {{- if .Values.opcua.configuration.pod.enabled }}      
  brokerSpec:
    {{- if .Values.opcua.configuration.pod.enabled }}
    brokerPodSpec:
      restartPolicy: {{ .Values.opcua.configuration.pod.restartPolicy }}
      containers:
      - name: {{ .Values.opcua.configuration.brokerPod1.name }}
        {{- if .Values.opcua.configuration.brokerPod1.env }}
        env:
        {{- range $key, $val := .Values.opcua.configuration.brokerPod1.env }}
          - name: {{ $key }}
            value: {{ $val | quote }}
        {{- end }}
        {{- end }}
        # {{- with .Values.opcua.configuration.brokerPod1.envFrom }}
        #   {{- toYaml . | nindent 10 }}
        # {{- end }}
        image: {{ printf "%s:%s" .Values.opcua.configuration.brokerPod1.image.repository .Values.opcua.configuration.brokerPod1.image.tag | quote }}
        imagePullPolicy: {{ .Values.opcua.configuration.brokerPod1.image.pullPolicy }}
        resources:
          requests:
            {{`"{{PLACEHOLDER}}"`}} : "1"
          limits:
            {{`"{{PLACEHOLDER}}"`}} : "1"
        {{- if .Values.opcua.configuration.brokerPod1.volumeMounts }}
        volumeMounts:
        {{- with .Values.opcua.configuration.brokerPod1.volumeMounts }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}

      - name: {{ .Values.opcua.configuration.brokerPod2.name }}
        {{- if .Values.opcua.configuration.brokerPod2.env }}
        env:
          {{- range $key, $val := .Values.opcua.configuration.brokerPod2.env }}
          - name: {{ $key }}
            value: {{ $val | quote }}
          {{- end }}
        {{- end }}
        # {{- with .Values.opcua.configuration.brokerPod2.envFrom }}
        #   {{- toYaml . | nindent 10 }}
        # {{- end }}
        volumeMounts:
        {{- with .Values.opcua.configuration.brokerPod2.volumeMounts}}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        securityContext:
          privileged: {{ .Values.opcua.configuration.brokerPod2.securityContext.privileged }}
          capabilities:
            drop: {{ .Values.opcua.configuration.brokerPod2.securityContext.capabilities.drop }}
        image: {{ printf "%s:%s" .Values.opcua.configuration.brokerPod2.image.repository .Values.opcua.configuration.brokerPod2.image.tag | quote }}
        imagePullPolicy: {{ .Values.opcua.configuration.brokerPod2.image.pullPolicy }}
        ports:
        {{- with .Values.opcua.configuration.brokerPod2.ports}}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
      {{- with .Values.opcua.configuration.pod.volumes}}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      imagePullSecrets:
      {{- with .Values.opcua.configuration.pod.imagePullSecrets }}
        {{- toYaml . | nindent 6 }}
      {{- end }}

  capacity: {{ .Values.opcua.configuration.capacity }}
{{- end }}
{{- end }}
{{- end }}

---

apiVersion: v1
data:
  config.json: |
    {
       "fusionopcuadataservice": {
           "specification": [
              {
                  "node_id": "ns=4",
                  "identifier": "i=39",
                  "parameter": "machine-state"
              },
              {
                  "node_id": "ns=4",
                  "identifier": "i=40",
                  "parameter": "electric-power"
              },
              {
                  "node_id": "ns=4",
                  "identifier": "i=24",
                  "parameter": "operating-hours"
              }
           ]
       }
     }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: opc-teka-aircube-1-app-config

---

apiVersion: v1
data:
  config.json: |
    {
                "data_directory": "./data",
                "listeners": {
                        "udp_port": 41234,
                        "tcp_port": 7070
                },
                "logger": {
                        "level": "info",
                        "path": "/tmp/",
                        "max_size": 134217728
                },
                "dbManager": {
                        "file": "metrics.db",
                        "retentionInSeconds": 3600,
                        "housekeepingIntervalInSeconds": 60,
                        "enabled": false
                },
                "connector": {
                        "mqtt": {
                                "host": "192.168.49.154",
                                "port": 1883,
                                "websockets": false,
                                "qos": 1,
                                "retain": false,
                                "secure": true,
                                "retries": 5,
                                "strictSSL": false,
                                "sparkplugB": true,
                                "version": "spBv1.0"   
                        }
                }
        }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: opc-teka-aircube-1-global-devices-config

---

apiVersion: v1
kind: Secret
metadata:
  name: iff-device-onboarding
  namespace: devices
  labels:
    iff-device-onboarding: "true"
data:
  onboarding_token: ewogICJhY2Nlc3NfdG9rZW4iOiAiZXlKaGJHY2lPaUpTVXpJMU5pSXNJblI1Y0NJZ09pQWlTbGRVSWl3aWEybGtJaUE2SUNKUVIxSXRSbXBSUlZOZmExcGxNazVVUVhGSGQwTjFkblJUWTJoeFVtbERaVWx4WlRreFpsUkpTbkJ2SW4wLmV5SmxlSEFpT2pFM01EYzVNRGMzTnpRc0ltbGhkQ0k2TVRjd056a3dOelEzTkN3aWFuUnBJam9pWWpZNVlUTTBNbUV0TldZME1TMDBOek16TFdFeU5EVXRNemsxTmpFNE5qSTBaVGt3SWl3aWFYTnpJam9pYUhSMGNITTZMeTlrWlhabGJHOXdiV1Z1ZEM1cGJtUjFjM1J5ZVMxbWRYTnBiMjR1WTI5dEwyRjFkR2d2Y21WaGJHMXpMMmxtWmlJc0ltRjFaQ0k2SW0xeGRIUXRZbkp2YTJWeUlpd2ljM1ZpSWpvaU5UUXlaamt5WW1JdE5tWTNZeTAwT0RWakxXSmlNakV0T0dVelpHRXhaV0l4WkRnM0lpd2lkSGx3SWpvaVFtVmhjbVZ5SWl3aVlYcHdJam9pWkdWMmFXTmxJaXdpYzJWemMybHZibDl6ZEdGMFpTSTZJalk1TVRVeVpUa3lMVGRqWVRNdE5EZ3hPQzA1TW1NeUxXTTRORGxpTTJZNU1XSmlOeUlzSW5OamIzQmxJam9pWkdWMmFXTmxYMmxrSUdkaGRHVjNZWGtnYlhGMGRDMWljbTlyWlhJZ2IyWm1iR2x1WlY5aFkyTmxjM01pTENKemFXUWlPaUkyT1RFMU1tVTVNaTAzWTJFekxUUTRNVGd0T1RKak1pMWpPRFE1WWpObU9URmlZamNpZlEuTzB5bmJlYzdPVVpBUzJWeDl4T3c1Yl9tcm5TN0s3VjZFcnJRT2VudzNpRlhlRk14QnhaNVVKalY2Z3BiZmRlQi0tUjVvam51NF9BMGhZazdwMHJENjhHalRDTWxHQ1VoLWR0WF9meGhrV1d4SFZzcEhKeDNVRWptUmYwZ3Z5ZDR0NDJody1ZQ2tlaFVXLVpzLWM0Q0liekhDRmduclJ1cjZtZFcyU081YndZbE9DUDA1bXlDNDJJVThpS3J6NjJhNld2aDgyOThsTVpIanRZOVZiM2Fkd0xTazZWdzkyVU9IbXh3dVVOa2xRaXhZRXQybUt6cmc4VXRmbEhVbXdSMDBXN2g0QjJLQ0l3cF9xUk82RmlTb2hJYnFVVmZLOXZia0ZjS3kxb3RDUXY0T09pQ2Foa0dsMjllOVpzaHhob2RkdUpBMktha0p3cXhoQnNSNXpFQ3RnIiwKICAiZXhwaXJlc19pbiI6IDMwMCwKICAicmVmcmVzaF9leHBpcmVzX2luIjogMCwKICAicmVmcmVzaF90b2tlbiI6ICJleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0lnT2lBaVNsZFVJaXdpYTJsa0lpQTZJQ0pqWXpZeU9URTBNUzB6WkRSbUxUUm1Nakl0WWpRM09DMHlZekZtTWpnMk1USTNaVGdpZlEuZXlKcFlYUWlPakUzTURjNU1EYzBOelFzSW1wMGFTSTZJalprWkdNek16STRMVEpoTlRJdE5ETTNNUzA1TldReUxUQXpOelE0T0ROaVl6UTRaaUlzSW1semN5STZJbWgwZEhCek9pOHZaR1YyWld4dmNHMWxiblF1YVc1a2RYTjBjbmt0Wm5WemFXOXVMbU52YlM5aGRYUm9MM0psWVd4dGN5OXBabVlpTENKaGRXUWlPaUpvZEhSd2N6b3ZMMlJsZG1Wc2IzQnRaVzUwTG1sdVpIVnpkSEo1TFdaMWMybHZiaTVqYjIwdllYVjBhQzl5WldGc2JYTXZhV1ptSWl3aWMzVmlJam9pTlRReVpqa3lZbUl0Tm1ZM1l5MDBPRFZqTFdKaU1qRXRPR1V6WkdFeFpXSXhaRGczSWl3aWRIbHdJam9pVDJabWJHbHVaU0lzSW1GNmNDSTZJbVJsZG1salpTSXNJbk5sYzNOcGIyNWZjM1JoZEdVaU9pSTJPVEUxTW1VNU1pMDNZMkV6TFRRNE1UZ3RPVEpqTWkxak9EUTVZak5tT1RGaVlqY2lMQ0p6WTI5d1pTSTZJbVJsZG1salpWOXBaQ0JuWVhSbGQyRjVJRzF4ZEhRdFluSnZhMlZ5SUc5bVpteHBibVZmWVdOalpYTnpJaXdpYzJsa0lqb2lOamt4TlRKbE9USXROMk5oTXkwME9ERTRMVGt5WXpJdFl6ZzBPV0l6WmpreFltSTNJbjAuMjJzVDhCZGVUaWdoWUxJUklRd0Zzd3NCTlhES3BWVUROekhfVmo4UDdjTSIsCiAgInRva2VuX3R5cGUiOiAiQmVhcmVyIiwKICAibm90LWJlZm9yZS1wb2xpY3kiOiAwLAogICJzZXNzaW9uX3N0YXRlIjogIjY5MTUyZTkyLTdjYTMtNDgxOC05MmMyLWM4NDliM2Y5MWJiNyIsCiAgInNjb3BlIjogImRldmljZV9pZCBnYXRld2F5IG1xdHQtYnJva2VyIG9mZmxpbmVfYWNjZXNzIgp9

---