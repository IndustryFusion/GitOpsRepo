apiVersion: {{ printf "%s/%s" .Values.crds.group .Values.crds.version }}
kind: Configuration
metadata:
  name: {{ .Values.mqtt.configuration.name }}
spec:
  discoveryHandler:
    name: mqtt
    discoveryDetails: |+
      {{- with .Values.mqtt.configuration.discoveryDetails}}
        {{- toYaml . | nindent 8 }}
      {{- end }}

  capacity: {{ .Values.mqtt.configuration.capacity }}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: devices-account
  namespace: devices
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: devices-role
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: devices-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: devices-role
subjects:
  - kind: ServiceAccount
    name: devices-account
    namespace: devices

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: iff-akri-controller
  labels:
    app: iff-akri-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iff-akri-controller
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: iff-akri-controller
    spec:
      serviceAccountName: devices-account
      restartPolicy: Always
      # hostAliases:
      # - ip: "192.168.49.154"
      #   hostnames:
      #   - "keycloak.local"
      containers:
        - name: iff-akri-controller
          image: {{ .Values.controller.image }}
          imagePullPolicy: Always
          securityContext:
            privileged: true
          env:
          - name: FACTORY_MONGO_URL
            value: {{ .Values.controller.factoryMongoDbUrl }}           
          - name: FACTORY_MONGO_DB_NAME
            value: {{ .Values.controller.factoryMongoDbName }}
      imagePullSecrets:
        - name: regcred
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mqtt-broker
  labels:
    app: mqtt-broker
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mqtt-broker
  template:
    metadata:
      labels:
        app: mqtt-broker
    spec:
      affinity: {}
      containers:
      - image: eclipse-mosquitto
        imagePullPolicy: IfNotPresent
        name: mqtt
        ports:
        - containerPort: 1883
          hostPort: 1883
        volumeMounts:
        - mountPath: /mosquitto/config/mosquitto.conf
          name: conf
          subPath: mosquitto.conf
      volumes:
      - name: conf
        configMap:
          name: mqtt-broker-config
          items:
          - key: mosquitto.conf
            path: mosquitto.conf

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mqtt-broker-config
data:
  mosquitto.conf: |
    listener 1883
    connection_messages true
    allow_anonymous true